{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Reconciler = require('react-reconciler');\nvar scheduler = require('scheduler');\nvar runtime = require('@tarojs/runtime');\nvar shared = require('@tarojs/shared');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar Reconciler__default = /*#__PURE__*/_interopDefaultLegacy(Reconciler);\nvar scheduler__namespace = /*#__PURE__*/_interopNamespace(scheduler);\n\nfunction isEventName(s) {\r\n    return s[0] === 'o' && s[1] === 'n';\r\n}\r\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\r\nfunction updateProps(dom, oldProps, newProps) {\r\n    var i;\r\n    for (i in oldProps) {\r\n        if (!(i in newProps)) {\r\n            setProperty(dom, i, null, oldProps[i]);\r\n        }\r\n    }\r\n    var isFormElement = dom instanceof runtime.FormElement;\r\n    for (i in newProps) {\r\n        if (oldProps[i] !== newProps[i] || (isFormElement && i === 'value')) {\r\n            setProperty(dom, i, newProps[i], oldProps[i]);\r\n        }\r\n    }\r\n}\r\n// function eventProxy (e: CommonEvent) {\r\n//   const el = document.getElementById(e.currentTarget.id)\r\n//   const handlers = el!.__handlers[e.type]\r\n//   handlers[0](e)\r\n// }\r\nfunction setEvent(dom, name, value, oldValue) {\r\n    var isCapture = name.endsWith('Capture');\r\n    var eventName = name.toLowerCase().slice(2);\r\n    if (isCapture) {\r\n        eventName = eventName.slice(0, -7);\r\n    }\r\n    var compName = shared.capitalize(shared.toCamelCase(dom.tagName.toLowerCase()));\r\n    if (eventName === 'click' && compName in shared.internalComponents) {\r\n        eventName = 'tap';\r\n    }\r\n    if (shared.isFunction(value)) {\r\n        if (!oldValue) {\r\n            dom.addEventListener(eventName, value, isCapture);\r\n        }\r\n        if (eventName === 'regionchange') {\r\n            dom.__handlers.begin[0] = value;\r\n            dom.__handlers.end[0] = value;\r\n        }\r\n        else {\r\n            dom.__handlers[eventName][0] = value;\r\n        }\r\n    }\r\n    else {\r\n        dom.removeEventListener(eventName, oldValue);\r\n    }\r\n}\r\nfunction setStyle(style, key, value) {\r\n    if (key[0] === '-') {\r\n        style.setProperty(key, value.toString());\r\n    }\r\n    style[key] =\r\n        shared.isNumber(value) && IS_NON_DIMENSIONAL.test(key) === false\r\n            ? value + 'px'\r\n            : value == null\r\n                ? ''\r\n                : value;\r\n}\r\nfunction setProperty(dom, name, value, oldValue) {\r\n    var _a, _b, _c, _d;\r\n    name = name === 'className' ? 'class' : name;\r\n    if (name === 'key' ||\r\n        name === 'children' ||\r\n        name === 'ref') ;\r\n    else if (name === 'style') {\r\n        var style = dom.style;\r\n        if (shared.isString(value)) {\r\n            style.cssText = value;\r\n        }\r\n        else {\r\n            if (shared.isString(oldValue)) {\r\n                style.cssText = '';\r\n                oldValue = null;\r\n            }\r\n            if (shared.isObject(oldValue)) {\r\n                for (var i in oldValue) {\r\n                    if (!(value && i in value)) {\r\n                        setStyle(style, i, '');\r\n                    }\r\n                }\r\n            }\r\n            if (shared.isObject(value)) {\r\n                for (var i$1 in value) {\r\n                    if (!oldValue || value[i$1] !== oldValue[i$1]) {\r\n                        setStyle(style, i$1, value[i$1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isEventName(name)) {\r\n        setEvent(dom, name, value, oldValue);\r\n    }\r\n    else if (name === 'dangerouslySetInnerHTML') {\r\n        var newHtml = (_b = (_a = value) === null || _a === void 0 ? void 0 : _a.__html) !== null && _b !== void 0 ? _b : '';\r\n        var oldHtml = (_d = (_c = oldValue) === null || _c === void 0 ? void 0 : _c.__html) !== null && _d !== void 0 ? _d : '';\r\n        if (newHtml || oldHtml) {\r\n            if (oldHtml !== newHtml) {\r\n                dom.innerHTML = newHtml;\r\n            }\r\n        }\r\n    }\r\n    else if (!shared.isFunction(value)) {\r\n        if (value == null) {\r\n            dom.removeAttribute(name);\r\n        }\r\n        else {\r\n            dom.setAttribute(name, value);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable @typescript-eslint/indent */\r\nvar now = scheduler__namespace.unstable_now;\r\nfunction returnFalse() {\r\n    return false;\r\n}\r\nvar hostConfig = {\r\n    createInstance: function createInstance(type) {\r\n        return runtime.document.createElement(type);\r\n    },\r\n    createTextInstance: function createTextInstance(text) {\r\n        return runtime.document.createTextNode(text);\r\n    },\r\n    getPublicInstance: function getPublicInstance(inst) {\r\n        return inst;\r\n    },\r\n    getRootHostContext: function getRootHostContext() {\r\n        return {};\r\n    },\r\n    getChildHostContext: function getChildHostContext() {\r\n        return {};\r\n    },\r\n    appendChild: function appendChild(parent, child) {\r\n        parent.appendChild(child);\r\n    },\r\n    appendInitialChild: function appendInitialChild(parent, child) {\r\n        parent.appendChild(child);\r\n    },\r\n    appendChildToContainer: function appendChildToContainer(parent, child) {\r\n        parent.appendChild(child);\r\n    },\r\n    removeChild: function removeChild(parent, child) {\r\n        parent.removeChild(child);\r\n    },\r\n    removeChildFromContainer: function removeChildFromContainer(parent, child) {\r\n        parent.removeChild(child);\r\n    },\r\n    insertBefore: function insertBefore(parent, child, refChild) {\r\n        parent.insertBefore(child, refChild);\r\n    },\r\n    insertInContainerBefore: function insertInContainerBefore(parent, child, refChild) {\r\n        parent.insertBefore(child, refChild);\r\n    },\r\n    commitTextUpdate: function commitTextUpdate(textInst, _, newText) {\r\n        textInst.nodeValue = newText;\r\n    },\r\n    finalizeInitialChildren: function finalizeInitialChildren(dom, _, props) {\r\n        updateProps(dom, {}, props);\r\n        return false;\r\n    },\r\n    prepareUpdate: function prepareUpdate() {\r\n        return shared.EMPTY_ARR;\r\n    },\r\n    commitUpdate: function commitUpdate(dom, _payload, _type, oldProps, newProps) {\r\n        updateProps(dom, oldProps, newProps);\r\n    },\r\n    hideInstance: function hideInstance(instance) {\r\n        var style = instance.style;\r\n        style.setProperty('display', 'none');\r\n    },\r\n    unhideInstance: function unhideInstance(instance, props) {\r\n        var styleProp = props.style;\r\n        var display = (styleProp === null || styleProp === void 0 ? void 0 : styleProp.hasOwnProperty('display')) ? styleProp.display : null;\r\n        display = display == null || shared.isBoolean(display) || display === '' ? '' : ('' + display).trim();\r\n        // eslint-disable-next-line dot-notation\r\n        instance.style['display'] = display;\r\n    },\r\n    clearContainer: function clearContainer(element) {\r\n        if (element.childNodes.length > 0) {\r\n            element.textContent = '';\r\n        }\r\n    },\r\n    queueMicrotask: !shared.isUndefined(Promise)\r\n        ? function (callback) { return Promise.resolve(null)\r\n            .then(callback)\r\n            .catch(function (error) {\r\n            setTimeout(function () {\r\n                throw error;\r\n            });\r\n        }); }\r\n        : setTimeout,\r\n    shouldSetTextContent: returnFalse,\r\n    prepareForCommit: function prepareForCommit() {\n    var _ = [], len = arguments.length;\n    while ( len-- ) _[ len ] = arguments[ len ];\n return null; },\r\n    resetAfterCommit: shared.noop,\r\n    commitMount: shared.noop,\r\n    now: now,\r\n    cancelTimeout: clearTimeout,\r\n    scheduleTimeout: setTimeout,\r\n    preparePortalMount: shared.noop,\r\n    noTimeout: -1,\r\n    supportsMutation: true,\r\n    supportsPersistence: false,\r\n    isPrimaryRenderer: true,\r\n    supportsHydration: false\r\n};\r\nvar TaroReconciler = Reconciler__default['default'](hostConfig);\r\nif (process.env.NODE_ENV !== 'production') {\r\n    var foundDevTools = TaroReconciler.injectIntoDevTools({\r\n        bundleType: 1,\r\n        version: '17.0.2',\r\n        rendererPackageName: 'taro-react'\r\n    });\r\n    if (!foundDevTools) {\r\n        // eslint-disable-next-line no-console\r\n        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://reactjs.org/link/react-devtools', 'font-weight:bold');\r\n    }\r\n}\n\nvar ContainerMap = new WeakMap();\r\nvar Root = function Root(renderer, domContainer) {\r\n    this.renderer = renderer;\r\n    this.internalRoot = renderer.createContainer(domContainer, 0 /** LegacyRoot: react-reconciler/src/ReactRootTags.js */, false, null);\r\n};\r\nRoot.prototype.render = function render (children, cb) {\r\n    var ref = this;\n        var renderer = ref.renderer;\n        var internalRoot = ref.internalRoot;\r\n    renderer.updateContainer(children, internalRoot, null, cb);\r\n    return renderer.getPublicRootInstance(internalRoot);\r\n};\r\nRoot.prototype.unmount = function unmount (cb) {\r\n    this.renderer.updateContainer(null, this.internalRoot, null, cb);\r\n};\r\nfunction render(element, domContainer, cb) {\r\n    var oldRoot = ContainerMap.get(domContainer);\r\n    if (oldRoot != null) {\r\n        return oldRoot.render(element, cb);\r\n    }\r\n    var root = new Root(TaroReconciler, domContainer);\r\n    ContainerMap.set(domContainer, root);\r\n    return root.render(element, cb);\r\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nvar unstable_batchedUpdates = TaroReconciler.batchedUpdates;\r\nfunction unmountComponentAtNode(dom) {\r\n    shared.ensure(dom && [1, 8, 9, 11].includes(dom.nodeType), 'unmountComponentAtNode(...): Target container is not a DOM element.');\r\n    var root = ContainerMap.get(dom);\r\n    if (!root)\r\n        { return false; }\r\n    unstable_batchedUpdates(function () {\r\n        root.unmount(function () {\r\n            ContainerMap.delete(dom);\r\n        });\r\n    }, null);\r\n    return true;\r\n}\r\nfunction findDOMNode(comp) {\r\n    if (comp == null) {\r\n        return null;\r\n    }\r\n    var nodeType = comp.nodeType;\r\n    if (nodeType === 1 || nodeType === 3) {\r\n        return comp;\r\n    }\r\n    return TaroReconciler.findHostInstance(comp);\r\n}\r\nvar portalType = shared.isFunction(Symbol) && Symbol.for\r\n    ? Symbol.for('react.portal')\r\n    : 0xeaca;\r\nfunction createPortal(children, containerInfo, key) {\r\n    return {\r\n        $$typeof: portalType,\r\n        key: key == null ? null : String(key),\r\n        children: children,\r\n        containerInfo: containerInfo,\r\n        implementation: null\r\n    };\r\n}\r\nvar index = {\r\n    render: render,\r\n    unstable_batchedUpdates: unstable_batchedUpdates,\r\n    unmountComponentAtNode: unmountComponentAtNode,\r\n    findDOMNode: findDOMNode,\r\n    createPortal: createPortal\r\n};\n\nexports.createPortal = createPortal;\nexports['default'] = index;\nexports.findDOMNode = findDOMNode;\nexports.render = render;\nexports.unmountComponentAtNode = unmountComponentAtNode;\nexports.unstable_batchedUpdates = unstable_batchedUpdates;\n//# sourceMappingURL=index.js.map\n"]}